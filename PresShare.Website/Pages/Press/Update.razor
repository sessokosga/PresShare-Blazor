@page "/press/update/{id:int}"

@inject PressProcessor pressProcess
@inject NavigationManager NavManager
@attribute [Authorize]

@if (saving)
{
    <p>Saving...</p>
}
else
{
    @if (press == null)
    {
        <p>Loading...</p>
    }
    else
    {
        <div id="add-press" class="add-press">
            <h2>Edit a Press </h2>
            <EditForm class="form-press" Model="@press" OnValidSubmit="@Save">
                <div class="form-press-left">
                    <InputText id="title" minlength="1" maxlength="25" required placeholder="" type="text" @bind-Value="@press.title"></InputText>
                    <InputTextArea minlength="2" required cols="30" rows="5" id="content" @bind-Value="@press.content" placeholder="Contenu du Press"></InputTextArea>
                </div>
                <div class="form-press-right">
                    <InputSelect id="genre" @bind-Value="@press.genre">
                        <option value="Text">Texte</option>
                        <option value="Link">Lien</option>
                    </InputSelect>
                    <br />
                    <input class="del-add" type="reset" value="Reset">
                    <input class="del-add" type="submit"  value="Save">
                </div>
            </EditForm>
        </div>
    }
}
@code {
    [Parameter]
    public int id { get; set; }
	private int authorID;
    [CascadingParameter]
	public Task<AuthenticationState> AuthState { get; set; }
    private PressModel? press = null;
    protected override async Task OnInitializedAsync()
    {
        press = await pressProcess.LoadPress(id);
		var authState = await AuthState;
        if (authState.User.Identity.IsAuthenticated)
		{
			authorID = int.Parse(authState.User.FindFirst(ClaimTypes.NameIdentifier).Value);
            if (authorID!= press.author_id)
                NavManager.NavigateTo("/");
        }
    }
    private bool saving = false;
    private async Task Save()
    {   
        saving = true;
         if(await pressProcess.Update(press)){
            NavManager.NavigateTo("/");
        } 
    }
}