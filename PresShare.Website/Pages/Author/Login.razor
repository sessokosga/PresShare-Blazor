@page "/authors/login"

@inject AuthorProcessor authProcess
@inject NavigationManager NavManager
@inject IMyAuthenticationService AuthService

<h2 class="center">Log in</h2>
@if (adding)
{
	<p>Checking credentials...</p>
}
@if(failure){
    <small class="form-error">There was an error while loggin in</small>
}

<EditForm class="form" Model="@author" OnValidSubmit="@Check">
    <label for="pseudo">Pseudo or email:</label>
		<InputText DisplayName="Pseudo <small>(20 caracters max)</small> :" type="text" required placeholder="Ex: senor16"
		@bind-Value="@author.pseudo" id="pseudo"/>
    <br>
    <label for="password">Password <small>(<a href="authors/restore">forgot password</a>)</small>:</label>
    <InputText type="password" required id="password" placeholder="yourpassword" @bind-Value="@author.password" />
    <label for="remember">
    <InputCheckbox @bind-Value="@remember" id="remember"/>
Remember me</label>
    <input class="del-add" type="reset" value="Reset">
    <input class="del-add" type="submit" required id="login" value="Log in">
</EditForm>


@code {
	private AuthenticatinoAuthorModel? author;
	private bool adding = false;
	private bool failure=false;
	private bool remember=false;

    
	private int calledNumber=0;
	protected override async Task OnInitializedAsync()
	{
		author = new AuthenticatinoAuthorModel();
	}

	private async Task Check()
	{
		adding = true;
		var result = await AuthService.Login(author,remember);
		if(result is not null){
			NavManager.NavigateTo("/");
		}else{
        	failure=true;
			adding=false;
		}
    }

}